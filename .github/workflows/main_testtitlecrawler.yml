# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy dotnet core app to Azure Function App - testtitlecrawler

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'WebTitleParserTest/ParserMasterFunction' # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '3.1.x' # set this to the dotnet version to use
  WORKING_DIRECTORY: 'WebTitleParserTest'
  AZURE_APPSERVISE_PACKAGE_PATH: 'WebTitleParserTest/TestTitleCrawlerClient' # set this to the path to your web app project, defaults to the repository root
  
jobs:
  build-and-deploy-func-app:
    runs-on: windows-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'testtitlecrawler'
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_9B5BBD0B313A4AACB0964DE458513A6C }}
  build-ui-app:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.301'
          include-prerelease: true

      - name: Build with dotnet
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_APPSERVISE_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./myapp
          popd

      - name: dotnet publish
        shell: pwsh
        run:|
          pushd './${{ env.AZURE_APPSERVISE_PACKAGE_PATH }}'
          dotnet publish -c Release -o ${{env.AZURE_APPSERVISE_PACKAGE_PATH}}/myapp
          popd

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.AZURE_APPSERVISE_PACKAGE_PATH}}/myapp  
  deploy-ui-app:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'testtitlecrawlerui'
          slot-name: 'production'
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_6dcfbd86b02943bca1e087177b65b61e }}
          package: .